{"trial_id": "0003", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "units", "default": null, "conditions": [], "min_value": 32, "max_value": 128, "step": 32, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "dropout_1", "default": 0.1, "conditions": [], "min_value": 0.1, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_2", "default": null, "conditions": [], "min_value": 32, "max_value": 128, "step": 32, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "dropout_2", "default": 0.1, "conditions": [], "min_value": 0.1, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_units", "default": null, "conditions": [], "min_value": 32, "max_value": 128, "step": 32, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "learning_rate", "default": 1e-05, "conditions": [], "min_value": 1e-05, "max_value": 0.01, "step": null, "sampling": "log"}}], "values": {"units": 64, "dropout_1": 0.4, "units_2": 32, "dropout_2": 0.2, "dense_units": 32, "learning_rate": 1.5633479518539975e-05, "tuner/epochs": 3, "tuner/initial_epoch": 0, "tuner/bracket": 7, "tuner/round": 0}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"D:\\coding\\trade\\\u9884\u6d4b\\venv\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"D:\\coding\\trade\\\u9884\u6d4b\\venv\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"D:\\coding\\trade\\\u9884\u6d4b\\venv\\lib\\site-packages\\keras_tuner\\src\\tuners\\hyperband.py\", line 427, in run_trial\n    return super().run_trial(trial, *fit_args, **fit_kwargs)\n  File \"D:\\coding\\trade\\\u9884\u6d4b\\venv\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"D:\\coding\\trade\\\u9884\u6d4b\\venv\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n  File \"D:\\coding\\trade\\\u9884\u6d4b\\venv\\lib\\site-packages\\keras_tuner\\src\\engine\\hypermodel.py\", line 149, in fit\n    return model.fit(*args, **kwargs)\n  File \"D:\\coding\\trade\\\u9884\u6d4b\\venv\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 70, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \".\\\u8d8b\u52bf\u9884\u6d4b_XGB.py\", line 520, in on_epoch_end\n    metrics = class_metrics(y_true, y_pred)\n  File \".\\\u8d8b\u52bf\u9884\u6d4b_XGB.py\", line 490, in class_metrics\n    class_indicator = K.cast(K.equal(y_true, K.arange(0, num_classes)), 'float32')  # Shape: (batch_size, num_classes)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: {{function_node __wrapped__Equal_device_/job:localhost/replica:0/task:0/device:GPU:0}} Incompatible shapes: [106663] vs. [3]\n\t [[{{node Equal}}]] [Op:Equal]\n"}